{"hash":"c425a742ecd38fd62e1244bff1c6f3d8f1f650fd","data":{"post":{"id":"cc7f556b30bdd23a9414eb629d936c04","title":"10 Tips for clean code","tags":"learning education","date":"2019-11-01T00:00:00.000Z","content":"<p>I was listening to a YouTube video on Clean Code by <a href=\"https://twitter.com/mtoppa\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Michael Toppa</a> during a short break from work. This video is an awesome summary of what you should keep in my when you are coding.</p>\n<p>If you've come across a bit of nasty code that you wrote months ago and wondered how to refactor it using clean code, then the tips in this video are a good place to start. </p>\n<p>I highly recommend that you watch the video for more details (the video is at the end of this post). Below is the list of the 10 Tips he mentioned for making your code clean:</p>\n<ol>\n<li>You are responsible for the quality of your code</li>\n<li>Use meaningful names</li>\n<li>Write code that expresses intent</li>\n<li>Comments are often lies waiting to happen.\nCode should speak for itself whenever possible</li>\n<li>Boy Scout Rule: Leave the code better than you found it</li>\n<li>Single Responsible Principle (SPR)</li>\n<li>Write tests (Test driven development (TDD))</li>\n<li>Work in short cycles: incremental and iterative</li>\n<li>Independent Architecture</li>\n<li>Practice, Practice, Practice!</li>\n</ol>\n<iframe src=\"https://www.youtube.com/embed/UjhX2sVf0eg\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n","timeToRead":1}},"context":{}}