{"hash":"d5179bb00a98a3b37b1d446a08223d130d6c2dc2","data":{"post":{"id":"7ba41a42b9e2d09c87435a91fc9f472e","title":"Design tokens with Theo","tags":"css javascript","date":"2019-09-26T00:00:00.000Z","content":"<p>In my never-ending quest in finding the right CSS structure that will allow easy theming, I have done a lot of reading and research into design tokens and how this will help me achieve my aim of writing CSS that can easily be overridden with little effort.\nIn short, design tokens are used to avoid hardcoded values that are reusable in your CSS. Design tokens are used to store variables such as typography, spacing, and colours that will be shared across platforms like web, iOS, and Android. It's a very similar concept with CSS variables, which contains values that are reused throughout a document. (<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties</a>)</p>\n<p>It was during a discussion I had with a coworker about CSS refactoring and design tokens that I discovered the existence of Theo. Theo is a tool developed by Salesforce that helps you automate the generation of your design tokens. Theo consumes JSON or YAML design token files and transforms the configured values into the format that best suits your needs.</p>\n<p>Below is a very simple JSON design token file (raw.json):</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"global\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"font\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"font\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"props\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"font-family\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Arial, sans-serif\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"font\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"font-size-x-small\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"10px\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"font-size\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"font-size-small\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"11px\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"font-size\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"font-size-normal\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"13px\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"font-size\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"font-size-large\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"22px\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"font-size\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"font-size-x-large\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"24px\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"font-size\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"font-weight-light\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"200\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"font-weight\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"font-weight-normal\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"400\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"font-weight\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"font-weight-bold\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"600\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"font-weight\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"font-weight-bolder\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"700\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"font-weight\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>I can then choose to output this raw values as SASS variables</p>\n<p>{% highlight javascript %}\ntheo.convert({\ntransform: {\ntype: \"web\",\nfile: \"raw.json\"\n},\nformat: {\ntype: \"scss\"\n}\n})\n.then(scss => {\n// save\n})\n.catch(error => console.log(<code>Something went wrong: ${error}</code>));\n{% endhighlight %}</p>\n<p>The output:</p>\n<pre class=\"language-json\"><code class=\"language-json\">$font-family<span class=\"token operator\">:</span> Arial<span class=\"token punctuation\">,</span> sans-serif;\n$font-size-x-small<span class=\"token operator\">:</span> 10px;\n$font-weight-bolder<span class=\"token operator\">:</span> <span class=\"token number\">700</span>;\n$font-size-large<span class=\"token operator\">:</span> 22px;\n$font-size-normal<span class=\"token operator\">:</span> 13px;\n$font-size-x-large<span class=\"token operator\">:</span> 24px;\n$font-size-small<span class=\"token operator\">:</span> 11px;\n$font-weight-bold<span class=\"token operator\">:</span> <span class=\"token number\">600</span>;\n$font-weight-normal<span class=\"token operator\">:</span> <span class=\"token number\">400</span>;\n$font-weight-light<span class=\"token operator\">:</span> <span class=\"token number\">100</span>;</code></pre>\n<p>Below is a very simple YAML design token file:</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">props</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">black</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#000'</span>\n  <span class=\"token key atrule\">white</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#fff'</span>\n<span class=\"token key atrule\">global</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> colors\n  <span class=\"token key atrule\">category</span><span class=\"token punctuation\">:</span> colors</code></pre>\n<p>Isn't it just neat? It just works and your design tokens can easily be are sorted into categories. For smaller applications and personal projects, it's a no brainer that Theo is a perfect solution. I have yet to use Theo on a large-scale but I am confident that it would work just as well.</p>\n<p>If your still doubtful, Why not give Theo a shot and see how you like it 😁</p>\n<h4 id=\"recommended-readings\"><a href=\"#recommended-readings\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Recommended readings</h4>\n<ul>\n<li><a href=\"https://github.com/salesforce-ux/theo-example\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Theo Github</a></li>\n<li><a href=\"https://css-tricks.com/what-are-design-tokens/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">What Are Design Tokens?</a></li>\n<li><a href=\"https://medium.com/eightshapes-llc/tokens-in-design-systems-25dd82d58421\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Tokens in Design Systems</a></li>\n</ul>\n","timeToRead":2}},"context":{}}