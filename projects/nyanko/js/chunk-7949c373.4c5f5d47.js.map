{"version":3,"sources":["webpack:///./src/views/Create.vue","webpack:///./src/views/Create.vue?39d0","webpack:///./src/views/Create.vue?6417","webpack:///./src/views/Create.vue?4e62"],"names":["class","sub","description","title","flat","invalid","variant","alertVariant","closeable","alertText","onRefresh","onCreate","todoList","listType","mode","onlyView","components","PageTitle","Card","Alert","TodoItems","setup","t","route","router","store","query","type","Today","forTomorrow","Tomorrow","isEdit","time","save","todos","setAlert","translationKey","value","showError","dispatch","result","state","checkIfExists","push","path","link","list","then","render","__scopeId"],"mappings":"6NACOA,MAAM,U,qKAAX,eA2BM,MA3BN,EA2BM,CA1BJ,eAGa,QADAC,IAAG,gBAAC,iBAAe,C,8BAAb,EAAAC,aAAW,O,wBAD5B,iBAAS,C,8BAAP,EAAAC,OAAO,IACT,O,MAEF,eAqBO,GArBDH,MAAM,eAAeI,KAAA,I,sBACT,EAAAC,Q,MAAU,O,mBACxB,iBAAuE,CAAvE,eAAuE,GAA/DC,QAAS,EAAAC,aAAeC,WAAW,G,yBAAO,iBAAa,C,8BAAX,EAAAC,WAAS,O,+BAEpD,O,mBACT,iBAMQ,CALA,EAAAA,W,iBADR,eAMQ,G,MAJLH,QAAS,EAAAC,aACT,QAAK,+BAAE,EAAAE,UAAS,M,yBAEjB,iBAAa,C,8BAAX,EAAAA,WAAS,O,2CAEb,eAOE,GANC,UAAS,EAAAC,UACT,OAAM,EAAAC,SACNC,SAAU,EAAAA,SACVC,SAAU,EAAAA,SACVC,KAAM,EAAAA,KACNC,UAAU,G,8OCRN,iBAAgB,CAC7BC,WAAY,CACVC,YAAA,KACAC,OAAA,KACAC,QAAA,KACAC,YAAA,MAEFC,MAP6B,WAQ3B,MAAc,iBAANC,EAAR,EAAQA,EACFC,EAAQ,iBACRC,EAAS,iBACTC,EAAQ,iBACRpB,EAAU,gBAAI,GACdS,EAAQS,EAAMG,MAAMZ,MAAQ,SAC5BD,EAAWU,EAAMG,MAAMC,MAAQ,OAAYC,MAC3CC,EAAchB,IAAa,OAAYiB,SACvCC,EAAkB,SAATjB,EACTX,EAAQmB,EAAE,cAAD,OAAeS,EAAS,OAAS,SAAjC,UACT7B,EAAcoB,EAAE,cAAD,OAAeS,EAAS,OAAS,SAAjC,eAAwD,CAC3EC,KAAMV,EAAE,cAAD,OAAgBO,EAAc,aAAe,gBAEhDpB,EAAY,eAAI,IAChBF,EAAe,eAAkB,QACjCK,EAAW,eAAc,CAC7BqB,MAAM,EACNC,MAAO,KAGHC,EAAW,SAAC7B,EAAuB8B,GACvC7B,EAAa8B,MAAQ/B,EACrBG,EAAU4B,MAAQf,EAAEc,IAGhB1B,EAAS,yDAAG,yHAAO4B,EAAP,yCACKb,EAAMc,SAAS,cAAe1B,GADnC,UACV2B,EADU,SAEZA,aAAkB,QAFN,uBAGVF,GACFH,EAAS,QAAS,6BAClB9B,EAAQgC,OAAQ,GAEhBF,EAAS,UAAW,4CAPR,0BAYhBvB,EAASyB,MAAQZ,EAAMgB,MAAMP,MAAMrB,GAZnB,2CAAH,qDAeT6B,EAAa,yDAAG,oHACCjB,EAAMc,SAAS,cAAe1B,GAD/B,UACd2B,EADc,SAGhBA,aAAkB,QAHF,uBAIlBL,EAAS,QAAS,4BAClB9B,EAAQgC,OAAQ,EALE,0BAShBG,GACFhB,EAAOmB,KAAK,CACVC,KAAM,OAAcC,OAXJ,2CAAH,qDAgBblC,EAAQ,yDAAG,WAAOmC,GAAP,uGACMrB,EAAMc,SAAS,mBAAoB,CACtDO,OACAjC,aAHa,UACT2B,EADS,SAKXA,aAAkB,QALP,uBAMbL,EAAS,QAAS,4BANL,0BAUfX,EAAOmB,KAAK,CACVC,KAAM,OAAcC,OAXP,2CAAH,sDAqBd,OANId,EACFrB,GAAU,GAAMqC,OAEhBL,IAAgBK,OAGX,CACLzB,IACAjB,UACAQ,WACAJ,YACAF,eACAK,WACAE,OACAX,QACAD,cACAQ,YACAC,e,UC3GN,EAAOqC,OAASA,EAChB,EAAOC,UAAY,kBAEJ,gB,kCCRf","file":"js/chunk-7949c373.4c5f5d47.js","sourcesContent":["<template>\n  <div class=\"create\">\n    <page-title>\n      {{title}}\n      <template #sub>{{description}}</template>\n    </page-title>\n    <card class=\"create__card\" flat>\n      <template v-if=\"invalid\" #body>\n        <alert :variant=\"alertVariant\" :closeable=\"false\">{{alertText}}</alert>\n      </template>\n      <template #body v-else>\n        <alert\n          v-if=\"alertText\"\n          :variant=\"alertVariant\"\n          @close=\"alertText = ''\"\n        >\n          {{alertText}}\n        </alert>\n        <todo-items\n          @refresh=\"onRefresh\"\n          @save=\"onCreate\"\n          :todoList=\"todoList\"\n          :listType=\"listType\"\n          :mode=\"mode\"\n          :onlyView=\"false\"\n        />\n      </template>\n    </card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent, ref,\n} from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport PageTitle from '@/components/PageTitle.vue';\nimport { CreateMode, overviewRoute } from '@/services/utils/link';\nimport Card from '@/components/Card.vue';\nimport {\n  AppError, ListDayType, ToDoList,\n} from '@/types/shared';\nimport Alert, { AlertVariant } from '@/components/Alert.vue';\nimport TodoItems from '@/components/todo/TodoItems.vue';\n\nexport default defineComponent({\n  components: {\n    PageTitle,\n    Card,\n    Alert,\n    TodoItems,\n  },\n  setup() {\n    const { t } = useI18n();\n    const route = useRoute();\n    const router = useRouter();\n    const store = useStore();\n    const invalid = ref(false);\n    const mode = (route.query.mode || 'create') as CreateMode;\n    const listType = route.query.type || ListDayType.Today;\n    const forTomorrow = listType === ListDayType.Tomorrow;\n    const isEdit = mode === 'edit';\n    const title = t(`createPage.${isEdit ? 'edit' : 'create'}Title`);\n    const description = t(`createPage.${isEdit ? 'edit' : 'create'}Description`, {\n      time: t(`createPage.${(forTomorrow ? 'createNext' : 'createNow')}`),\n    });\n    const alertText = ref('');\n    const alertVariant = ref<AlertVariant>('info');\n    const todoList = ref<ToDoList>({\n      save: false,\n      todos: [],\n    });\n\n    const setAlert = (variant: AlertVariant, translationKey: string) => {\n      alertVariant.value = variant;\n      alertText.value = t(translationKey);\n    };\n\n    const onRefresh = async (showError = false) => {\n      const result = await store.dispatch('todos/fetch', listType);\n      if (result instanceof AppError) {\n        if (showError) {\n          setAlert('error', 'createPage.errors.invalid');\n          invalid.value = true;\n        } else {\n          setAlert('success', 'createPage.notifications.fetchAllSuccess');\n        }\n        return;\n      }\n\n      todoList.value = store.state.todos[listType as ListDayType];\n    };\n\n    const checkIfExists = async () => {\n      const result = await store.dispatch('todos/check', listType);\n\n      if (result instanceof AppError) {\n        setAlert('error', 'createPage.errors.server');\n        invalid.value = true;\n        return;\n      }\n\n      if (result) {\n        router.push({\n          path: overviewRoute.link,\n        });\n      }\n    };\n\n    const onCreate = async (list: ToDoList) => {\n      const result = await store.dispatch('todos/createList', {\n        list,\n        listType,\n      });\n      if (result instanceof AppError) {\n        setAlert('error', 'createPage.errors.server');\n        return;\n      }\n\n      router.push({\n        path: overviewRoute.link,\n      });\n    };\n\n    if (isEdit) {\n      onRefresh(true).then();\n    } else {\n      checkIfExists().then();\n    }\n\n    return {\n      t,\n      invalid,\n      listType,\n      alertText,\n      alertVariant,\n      todoList,\n      mode,\n      title,\n      description,\n      onRefresh,\n      onCreate,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/styles/utils/_functions.scss';\n\n.create {\n  &:deep(.create__card) {\n    max-width: remSize(800px);\n\n    .card__body {\n      @apply p-0;\n    }\n  }\n}\n</style>\n","\nimport {\n  defineComponent, ref,\n} from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport PageTitle from '@/components/PageTitle.vue';\nimport { CreateMode, overviewRoute } from '@/services/utils/link';\nimport Card from '@/components/Card.vue';\nimport {\n  AppError, ListDayType, ToDoList,\n} from '@/types/shared';\nimport Alert, { AlertVariant } from '@/components/Alert.vue';\nimport TodoItems from '@/components/todo/TodoItems.vue';\n\nexport default defineComponent({\n  components: {\n    PageTitle,\n    Card,\n    Alert,\n    TodoItems,\n  },\n  setup() {\n    const { t } = useI18n();\n    const route = useRoute();\n    const router = useRouter();\n    const store = useStore();\n    const invalid = ref(false);\n    const mode = (route.query.mode || 'create') as CreateMode;\n    const listType = route.query.type || ListDayType.Today;\n    const forTomorrow = listType === ListDayType.Tomorrow;\n    const isEdit = mode === 'edit';\n    const title = t(`createPage.${isEdit ? 'edit' : 'create'}Title`);\n    const description = t(`createPage.${isEdit ? 'edit' : 'create'}Description`, {\n      time: t(`createPage.${(forTomorrow ? 'createNext' : 'createNow')}`),\n    });\n    const alertText = ref('');\n    const alertVariant = ref<AlertVariant>('info');\n    const todoList = ref<ToDoList>({\n      save: false,\n      todos: [],\n    });\n\n    const setAlert = (variant: AlertVariant, translationKey: string) => {\n      alertVariant.value = variant;\n      alertText.value = t(translationKey);\n    };\n\n    const onRefresh = async (showError = false) => {\n      const result = await store.dispatch('todos/fetch', listType);\n      if (result instanceof AppError) {\n        if (showError) {\n          setAlert('error', 'createPage.errors.invalid');\n          invalid.value = true;\n        } else {\n          setAlert('success', 'createPage.notifications.fetchAllSuccess');\n        }\n        return;\n      }\n\n      todoList.value = store.state.todos[listType as ListDayType];\n    };\n\n    const checkIfExists = async () => {\n      const result = await store.dispatch('todos/check', listType);\n\n      if (result instanceof AppError) {\n        setAlert('error', 'createPage.errors.server');\n        invalid.value = true;\n        return;\n      }\n\n      if (result) {\n        router.push({\n          path: overviewRoute.link,\n        });\n      }\n    };\n\n    const onCreate = async (list: ToDoList) => {\n      const result = await store.dispatch('todos/createList', {\n        list,\n        listType,\n      });\n      if (result instanceof AppError) {\n        setAlert('error', 'createPage.errors.server');\n        return;\n      }\n\n      router.push({\n        path: overviewRoute.link,\n      });\n    };\n\n    if (isEdit) {\n      onRefresh(true).then();\n    } else {\n      checkIfExists().then();\n    }\n\n    return {\n      t,\n      invalid,\n      listType,\n      alertText,\n      alertVariant,\n      todoList,\n      mode,\n      title,\n      description,\n      onRefresh,\n      onCreate,\n    };\n  },\n});\n","import { render } from \"./Create.vue?vue&type=template&id=c8512fc0&scoped=true\"\nimport script from \"./Create.vue?vue&type=script&lang=ts\"\nexport * from \"./Create.vue?vue&type=script&lang=ts\"\n\nimport \"./Create.vue?vue&type=style&index=0&id=c8512fc0&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-c8512fc0\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Create.vue?vue&type=style&index=0&id=c8512fc0&lang=scss&scoped=true\""],"sourceRoot":""}